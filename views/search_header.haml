:css
  @media screen and (min-width: 1024px) {
    .search-in-header {
      width: 160%;
    }
    .search-in-header input {
      width: 160%;
    }             
  }

  @media screen and (max-width: 1024px) {
    .search-in-header {
      width: 140%;
    }
    .search-in-header input {
      width: 140%;
    }
  }

  @media screen and (max-width: 767px) {
    .search-in-header {
      margin: 5px auto;
    }
    .search-in-header input {
      margin: 5px auto;      
    }
    .pull-right {
      float: left;
    }
    .simple-nav {
      position: relative;
    }
  }

  @media screen and (max-width: 480px) {
    .search-in-header {
      margin: 5px auto;
      width: 100%;
    }
    .search-in-header input {
      margin: 5px auto;
      width: 100%;
    }
    .pull-right {
      left: 0;
    }
    .simple-nav {
      position: relative;
    }
  }   

:coffeescript
  $(document).ready ->

    funders_us_ids = []
    $.getJSON "/funders_us.json", (data) ->
      console.log "Loaded", data.length, "Us Funders"
      funders_us_ids = data.pluck("id").map (el)->
        parseInt(el)

    fundersRemote = new Bloodhound(
      name: "funders"
      datumTokenizer: (d) ->
        d.tokens

      queryTokenizer: Bloodhound.tokenizers.whitespace
      remote:
        url: "http://api.crossref.org/v1/funders?rows=1000&query=%QUERY"
        filter: (dataResponse) ->
          if $("#us_only").is(":checked")
            dataResponse.message.items.filter (item) ->
              funders_us_ids.includes parseInt(item.id)
          else
            dataResponse.message.items

      limit: 16
      dupDetector: (r, l) ->
        false
    )
    fundersRemote.initialize()
    suggestionLayout = Hogan.compile("<p>{{name}} <small>{{location}}</small></p>")
    $("#search-input").typeahead null,
      name: "funders"
      displayKey: "name"
      source: fundersRemote.ttAdapter()
      templates:
        suggestion: (d) ->
          suggestionLayout.render d

      limit: 16

    $("#search-input").bind "typeahead:autocompleted typeahead:selected", (e, datum) ->
      $('#spinner').css("color", "rgb(255, 255, 255)")
      opts =
        lines: 8 # The number of lines to draw
        length: 10 # The length of each line
        width: 3 # The line thickness
        radius: 5 # The radius of the inner circle
        corners: 1 # Corner roundness (0..1)
        rotate: 0 # The rotation offset
        direction: 1 # 1: clockwise, -1: counterclockwise
        color: "rgb(138, 135, 193)" # #rgb or #rrggbb or array of colors
        speed: 1 # Rounds per second
        trail: 60 # Afterglow percentage
        shadow: true # Whether to render a shadow
        hwaccel: false # Whether to use hardware acceleration
        className: "spinner" # The CSS class to assign to the spinner
        zIndex: 2e9 # The z-index (defaults to 2000000000)
        #top: '61%', // Top position relative to parent
        #left: '75%' // Left position relative to parent
      target = document.getElementById("spinner")
      spinner = new Spinner(opts).spin(target)
      $("#fundref-input").val datum["id"]
      readyCheck = setInterval (->
        ready = $("#spinner").css("color")
        console.log ready
        if ready is "rgb(255, 255, 255)"
          clearInterval readyCheck
          $("#fundref-form").submit()
        return
      ), 100

.proxy-form{style: "display: none;"}
  %form#fundref-form{method: 'GET', action: '/'}
    %input#fundref-input{name: 'q'}
    %input#us-only{name: "us-only", type: "hidden", value: (params['us-only'] == 't' ? 't' : 'f')}

.row-fluid
  - if page[:mini_header]
    .span-header
      %a{href: "http://chorusaccess.org/"}
        %img.home{src: '/choruslogo.svg'}

  - else
    .span-header.span3
      %a.home-link{href: '/'}
        %img{src: '/chorus-logo.png'}
    .span-header.span6
      %form#search-form{:method => 'GET', action: '/'}
        .search-in-header
          %input.input.input-xlarge.search-input#search-input{placeholder: 'Funder name', name: 'q', type: 'text', value: page[:bare_query]}
          %input#us-only{name: "us-only", type: "hidden", value: (params['us-only'] == 't' ? 't' : 'f')}
          %i.icon-search
    .span-header.span3
      .pull-right
        .simple-nav-outer
          .simple-nav.smaller
            %a{href: 'http://chorusaccess.org'} CHORUS
